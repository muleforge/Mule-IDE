1=Solicitud # {0} recibida: Cliente {1} con identidad = {2} solicita un préstamo del monto = {3} a pagar en {4} meses
2=Cotización # {0} recibida: {1}
3=Tasa de interés es de: {0}
4={0}, tasa: {1}
5=Procesando solicitud: {0}
6=La mejor cotización es: {0}
7=Perfil crediticia # {0} recibida: puntaje = {1}, antiguedad = {2}

10=Cantidad de cotizaciones recibidas: {0}
11=Solicitud promedia: {0}
12=Sin resultado, debe haber ocurrido una falla, revise los logs.
13=Cotización recibida: {0}
14=Finalizando ahora
15=Respuesta no reconocida, intente de nuevo:
16=Ingrese su nombre: 
17=Ingrese el monto del préstamo: 
18=Ingrese el plazo del préstamo en meses: 
19=Plazo inválido: {0}. Usando plazo aleatorio
20=Monto inválido: {0}. Usando monto aleatorio
22=Ingrese cantidad de cotizaciones: 
23=Cantidad mínima de cotizaciones es 1
24=Solicitud {0}: {1}

30=Welcome to the Mule Loan Broker ESB example. This example demonstrates using JMS, Web Services,\n Http/Rest and EJBs using an ESB architecture.\nFor more information see http://www.muledocs.org.LoanBroker.\n\nThe example demonstrates integrating EJB applications in 2 ways -\n  1. Calling out to a remote EJB using a Mule Endpoint.\n  2. Managing an EJB as a Mule component.\n\nBoth have the same behavior but the second method allows a remote EJB to be used as if it were\n a local Mule component, thereby enabling tighter integration.\n\nPlease select [1], [2] or [q] quit: 
31=Loading 'Ejb via an Endpoint' version
32=Bye
33=Loading 'Managed Ejb Component' version
34=[1] solicitar un préstamo\n[q] salir\n\nSeleccione por favor: 

40=Welcome to the Mule Loan Broker example
41=[1] solicitar un préstamo\n[2] enviar 100 solicitudes aleatorias\n[3] enviar X solicitudes aleatorias\n[q] salir\n\nSeleccione por favor: 
42=Solicitud asincrónica enviada
43=Which SOAP stack would you like to use: [a]xis or [x]fire?
44=Would you like to run the [s]ynchronous or [a]synchronous version?
45=Loading Asynchronous Loan Broker
46=Loading Synchronous Loan Broker
