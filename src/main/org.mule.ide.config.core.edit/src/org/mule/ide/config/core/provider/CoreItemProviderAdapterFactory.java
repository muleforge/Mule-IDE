/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.mule.ide.config.core.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.mule.ide.config.core.util.CoreAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class CoreItemProviderAdapterFactory extends CoreAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public CoreItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractAgentType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractAgentTypeItemProvider abstractAgentTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractAgentType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractAgentTypeAdapter() {
		if (abstractAgentTypeItemProvider == null) {
			abstractAgentTypeItemProvider = new AbstractAgentTypeItemProvider(this);
		}

		return abstractAgentTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractBindingType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractBindingTypeItemProvider abstractBindingTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractBindingType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractBindingTypeAdapter() {
		if (abstractBindingTypeItemProvider == null) {
			abstractBindingTypeItemProvider = new AbstractBindingTypeItemProvider(this);
		}

		return abstractBindingTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractCatchAllStrategyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractCatchAllStrategyTypeItemProvider abstractCatchAllStrategyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractCatchAllStrategyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractCatchAllStrategyTypeAdapter() {
		if (abstractCatchAllStrategyTypeItemProvider == null) {
			abstractCatchAllStrategyTypeItemProvider = new AbstractCatchAllStrategyTypeItemProvider(this);
		}

		return abstractCatchAllStrategyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractComponentThreadingProfileType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractComponentThreadingProfileTypeItemProvider abstractComponentThreadingProfileTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractComponentThreadingProfileType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractComponentThreadingProfileTypeAdapter() {
		if (abstractComponentThreadingProfileTypeItemProvider == null) {
			abstractComponentThreadingProfileTypeItemProvider = new AbstractComponentThreadingProfileTypeItemProvider(this);
		}

		return abstractComponentThreadingProfileTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractConnectionStrategyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractConnectionStrategyTypeItemProvider abstractConnectionStrategyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractConnectionStrategyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractConnectionStrategyTypeAdapter() {
		if (abstractConnectionStrategyTypeItemProvider == null) {
			abstractConnectionStrategyTypeItemProvider = new AbstractConnectionStrategyTypeItemProvider(this);
		}

		return abstractConnectionStrategyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractConnectorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractConnectorTypeItemProvider abstractConnectorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractConnectorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractConnectorTypeAdapter() {
		if (abstractConnectorTypeItemProvider == null) {
			abstractConnectorTypeItemProvider = new AbstractConnectorTypeItemProvider(this);
		}

		return abstractConnectorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractEntrypointResolverType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractEntrypointResolverTypeItemProvider abstractEntrypointResolverTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractEntrypointResolverType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractEntrypointResolverTypeAdapter() {
		if (abstractEntrypointResolverTypeItemProvider == null) {
			abstractEntrypointResolverTypeItemProvider = new AbstractEntrypointResolverTypeItemProvider(this);
		}

		return abstractEntrypointResolverTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractExceptionStrategyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractExceptionStrategyTypeItemProvider abstractExceptionStrategyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractExceptionStrategyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractExceptionStrategyTypeAdapter() {
		if (abstractExceptionStrategyTypeItemProvider == null) {
			abstractExceptionStrategyTypeItemProvider = new AbstractExceptionStrategyTypeItemProvider(this);
		}

		return abstractExceptionStrategyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractExtensionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractExtensionTypeItemProvider abstractExtensionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractExtensionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractExtensionTypeAdapter() {
		if (abstractExtensionTypeItemProvider == null) {
			abstractExtensionTypeItemProvider = new AbstractExtensionTypeItemProvider(this);
		}

		return abstractExtensionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractFilterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractFilterTypeItemProvider abstractFilterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractFilterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractFilterTypeAdapter() {
		if (abstractFilterTypeItemProvider == null) {
			abstractFilterTypeItemProvider = new AbstractFilterTypeItemProvider(this);
		}

		return abstractFilterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractGlobalEndpointType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractGlobalEndpointTypeItemProvider abstractGlobalEndpointTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractGlobalEndpointType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractGlobalEndpointTypeAdapter() {
		if (abstractGlobalEndpointTypeItemProvider == null) {
			abstractGlobalEndpointTypeItemProvider = new AbstractGlobalEndpointTypeItemProvider(this);
		}

		return abstractGlobalEndpointTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractInboundEndpointType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractInboundEndpointTypeItemProvider abstractInboundEndpointTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractInboundEndpointType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractInboundEndpointTypeAdapter() {
		if (abstractInboundEndpointTypeItemProvider == null) {
			abstractInboundEndpointTypeItemProvider = new AbstractInboundEndpointTypeItemProvider(this);
		}

		return abstractInboundEndpointTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractInboundRouterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractInboundRouterTypeItemProvider abstractInboundRouterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractInboundRouterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractInboundRouterTypeAdapter() {
		if (abstractInboundRouterTypeItemProvider == null) {
			abstractInboundRouterTypeItemProvider = new AbstractInboundRouterTypeItemProvider(this);
		}

		return abstractInboundRouterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractModelType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractModelTypeItemProvider abstractModelTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractModelType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractModelTypeAdapter() {
		if (abstractModelTypeItemProvider == null) {
			abstractModelTypeItemProvider = new AbstractModelTypeItemProvider(this);
		}

		return abstractModelTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractObjectFactoryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractObjectFactoryTypeItemProvider abstractObjectFactoryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractObjectFactoryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractObjectFactoryTypeAdapter() {
		if (abstractObjectFactoryTypeItemProvider == null) {
			abstractObjectFactoryTypeItemProvider = new AbstractObjectFactoryTypeItemProvider(this);
		}

		return abstractObjectFactoryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractOutboundEndpointType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractOutboundEndpointTypeItemProvider abstractOutboundEndpointTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractOutboundEndpointType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractOutboundEndpointTypeAdapter() {
		if (abstractOutboundEndpointTypeItemProvider == null) {
			abstractOutboundEndpointTypeItemProvider = new AbstractOutboundEndpointTypeItemProvider(this);
		}

		return abstractOutboundEndpointTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractOutboundRouterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractOutboundRouterTypeItemProvider abstractOutboundRouterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractOutboundRouterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractOutboundRouterTypeAdapter() {
		if (abstractOutboundRouterTypeItemProvider == null) {
			abstractOutboundRouterTypeItemProvider = new AbstractOutboundRouterTypeItemProvider(this);
		}

		return abstractOutboundRouterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractPoolingProfileType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractPoolingProfileTypeItemProvider abstractPoolingProfileTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractPoolingProfileType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractPoolingProfileTypeAdapter() {
		if (abstractPoolingProfileTypeItemProvider == null) {
			abstractPoolingProfileTypeItemProvider = new AbstractPoolingProfileTypeItemProvider(this);
		}

		return abstractPoolingProfileTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractPropertyExtractorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractPropertyExtractorTypeItemProvider abstractPropertyExtractorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractPropertyExtractorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractPropertyExtractorTypeAdapter() {
		if (abstractPropertyExtractorTypeItemProvider == null) {
			abstractPropertyExtractorTypeItemProvider = new AbstractPropertyExtractorTypeItemProvider(this);
		}

		return abstractPropertyExtractorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractQueueProfileType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractQueueProfileTypeItemProvider abstractQueueProfileTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractQueueProfileType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractQueueProfileTypeAdapter() {
		if (abstractQueueProfileTypeItemProvider == null) {
			abstractQueueProfileTypeItemProvider = new AbstractQueueProfileTypeItemProvider(this);
		}

		return abstractQueueProfileTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractResponseEndpointType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractResponseEndpointTypeItemProvider abstractResponseEndpointTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractResponseEndpointType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractResponseEndpointTypeAdapter() {
		if (abstractResponseEndpointTypeItemProvider == null) {
			abstractResponseEndpointTypeItemProvider = new AbstractResponseEndpointTypeItemProvider(this);
		}

		return abstractResponseEndpointTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractResponseRouterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractResponseRouterTypeItemProvider abstractResponseRouterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractResponseRouterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractResponseRouterTypeAdapter() {
		if (abstractResponseRouterTypeItemProvider == null) {
			abstractResponseRouterTypeItemProvider = new AbstractResponseRouterTypeItemProvider(this);
		}

		return abstractResponseRouterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractSecurityFilterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractSecurityFilterTypeItemProvider abstractSecurityFilterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractSecurityFilterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractSecurityFilterTypeAdapter() {
		if (abstractSecurityFilterTypeItemProvider == null) {
			abstractSecurityFilterTypeItemProvider = new AbstractSecurityFilterTypeItemProvider(this);
		}

		return abstractSecurityFilterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractSecurityManagerType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractSecurityManagerTypeItemProvider abstractSecurityManagerTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractSecurityManagerType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractSecurityManagerTypeAdapter() {
		if (abstractSecurityManagerTypeItemProvider == null) {
			abstractSecurityManagerTypeItemProvider = new AbstractSecurityManagerTypeItemProvider(this);
		}

		return abstractSecurityManagerTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractServiceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractServiceTypeItemProvider abstractServiceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractServiceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractServiceTypeAdapter() {
		if (abstractServiceTypeItemProvider == null) {
			abstractServiceTypeItemProvider = new AbstractServiceTypeItemProvider(this);
		}

		return abstractServiceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractStorageType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractStorageTypeItemProvider abstractStorageTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractStorageType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractStorageTypeAdapter() {
		if (abstractStorageTypeItemProvider == null) {
			abstractStorageTypeItemProvider = new AbstractStorageTypeItemProvider(this);
		}

		return abstractStorageTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractTransactionFactoryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractTransactionFactoryTypeItemProvider abstractTransactionFactoryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractTransactionFactoryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractTransactionFactoryTypeAdapter() {
		if (abstractTransactionFactoryTypeItemProvider == null) {
			abstractTransactionFactoryTypeItemProvider = new AbstractTransactionFactoryTypeItemProvider(this);
		}

		return abstractTransactionFactoryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractTransactionManagerType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractTransactionManagerTypeItemProvider abstractTransactionManagerTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractTransactionManagerType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractTransactionManagerTypeAdapter() {
		if (abstractTransactionManagerTypeItemProvider == null) {
			abstractTransactionManagerTypeItemProvider = new AbstractTransactionManagerTypeItemProvider(this);
		}

		return abstractTransactionManagerTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractTransactionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractTransactionTypeItemProvider abstractTransactionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractTransactionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractTransactionTypeAdapter() {
		if (abstractTransactionTypeItemProvider == null) {
			abstractTransactionTypeItemProvider = new AbstractTransactionTypeItemProvider(this);
		}

		return abstractTransactionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.AbstractTransformerType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractTransformerTypeItemProvider abstractTransformerTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.AbstractTransformerType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractTransformerTypeAdapter() {
		if (abstractTransformerTypeItemProvider == null) {
			abstractTransformerTypeItemProvider = new AbstractTransformerTypeItemProvider(this);
		}

		return abstractTransformerTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.BaseContainerContextType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaseContainerContextTypeItemProvider baseContainerContextTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.BaseContainerContextType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBaseContainerContextTypeAdapter() {
		if (baseContainerContextTypeItemProvider == null) {
			baseContainerContextTypeItemProvider = new BaseContainerContextTypeItemProvider(this);
		}

		return baseContainerContextTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.BaseServiceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaseServiceTypeItemProvider baseServiceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.BaseServiceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBaseServiceTypeAdapter() {
		if (baseServiceTypeItemProvider == null) {
			baseServiceTypeItemProvider = new BaseServiceTypeItemProvider(this);
		}

		return baseServiceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.CallableEntrypointResolverType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CallableEntrypointResolverTypeItemProvider callableEntrypointResolverTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.CallableEntrypointResolverType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCallableEntrypointResolverTypeAdapter() {
		if (callableEntrypointResolverTypeItemProvider == null) {
			callableEntrypointResolverTypeItemProvider = new CallableEntrypointResolverTypeItemProvider(this);
		}

		return callableEntrypointResolverTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.ChunkingRouterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChunkingRouterTypeItemProvider chunkingRouterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.ChunkingRouterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createChunkingRouterTypeAdapter() {
		if (chunkingRouterTypeItemProvider == null) {
			chunkingRouterTypeItemProvider = new ChunkingRouterTypeItemProvider(this);
		}

		return chunkingRouterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.CollectionFilterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CollectionFilterTypeItemProvider collectionFilterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.CollectionFilterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCollectionFilterTypeAdapter() {
		if (collectionFilterTypeItemProvider == null) {
			collectionFilterTypeItemProvider = new CollectionFilterTypeItemProvider(this);
		}

		return collectionFilterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.ConnectionStrategyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectionStrategyTypeItemProvider connectionStrategyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.ConnectionStrategyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectionStrategyTypeAdapter() {
		if (connectionStrategyTypeItemProvider == null) {
			connectionStrategyTypeItemProvider = new ConnectionStrategyTypeItemProvider(this);
		}

		return connectionStrategyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.ConnectorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectorTypeItemProvider connectorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.ConnectorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectorTypeAdapter() {
		if (connectorTypeItemProvider == null) {
			connectorTypeItemProvider = new ConnectorTypeItemProvider(this);
		}

		return connectorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.ContainerContextType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContainerContextTypeItemProvider containerContextTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.ContainerContextType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainerContextTypeAdapter() {
		if (containerContextTypeItemProvider == null) {
			containerContextTypeItemProvider = new ContainerContextTypeItemProvider(this);
		}

		return containerContextTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.CorrelationAggregatorRouterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CorrelationAggregatorRouterTypeItemProvider correlationAggregatorRouterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.CorrelationAggregatorRouterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCorrelationAggregatorRouterTypeAdapter() {
		if (correlationAggregatorRouterTypeItemProvider == null) {
			correlationAggregatorRouterTypeItemProvider = new CorrelationAggregatorRouterTypeItemProvider(this);
		}

		return correlationAggregatorRouterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.CorrelationRouterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CorrelationRouterTypeItemProvider correlationRouterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.CorrelationRouterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCorrelationRouterTypeAdapter() {
		if (correlationRouterTypeItemProvider == null) {
			correlationRouterTypeItemProvider = new CorrelationRouterTypeItemProvider(this);
		}

		return correlationRouterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.CustomCatchAllStrategyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomCatchAllStrategyTypeItemProvider customCatchAllStrategyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.CustomCatchAllStrategyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomCatchAllStrategyTypeAdapter() {
		if (customCatchAllStrategyTypeItemProvider == null) {
			customCatchAllStrategyTypeItemProvider = new CustomCatchAllStrategyTypeItemProvider(this);
		}

		return customCatchAllStrategyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.CustomConnectionStrategyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomConnectionStrategyTypeItemProvider customConnectionStrategyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.CustomConnectionStrategyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomConnectionStrategyTypeAdapter() {
		if (customConnectionStrategyTypeItemProvider == null) {
			customConnectionStrategyTypeItemProvider = new CustomConnectionStrategyTypeItemProvider(this);
		}

		return customConnectionStrategyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.CustomConnectorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomConnectorTypeItemProvider customConnectorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.CustomConnectorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomConnectorTypeAdapter() {
		if (customConnectorTypeItemProvider == null) {
			customConnectorTypeItemProvider = new CustomConnectorTypeItemProvider(this);
		}

		return customConnectorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.CustomContainerContextType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomContainerContextTypeItemProvider customContainerContextTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.CustomContainerContextType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomContainerContextTypeAdapter() {
		if (customContainerContextTypeItemProvider == null) {
			customContainerContextTypeItemProvider = new CustomContainerContextTypeItemProvider(this);
		}

		return customContainerContextTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.CustomEncryptionStrategyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomEncryptionStrategyTypeItemProvider customEncryptionStrategyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.CustomEncryptionStrategyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomEncryptionStrategyTypeAdapter() {
		if (customEncryptionStrategyTypeItemProvider == null) {
			customEncryptionStrategyTypeItemProvider = new CustomEncryptionStrategyTypeItemProvider(this);
		}

		return customEncryptionStrategyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.CustomEntrypointResolverType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomEntrypointResolverTypeItemProvider customEntrypointResolverTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.CustomEntrypointResolverType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomEntrypointResolverTypeAdapter() {
		if (customEntrypointResolverTypeItemProvider == null) {
			customEntrypointResolverTypeItemProvider = new CustomEntrypointResolverTypeItemProvider(this);
		}

		return customEntrypointResolverTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.CustomExceptionStrategyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomExceptionStrategyTypeItemProvider customExceptionStrategyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.CustomExceptionStrategyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomExceptionStrategyTypeAdapter() {
		if (customExceptionStrategyTypeItemProvider == null) {
			customExceptionStrategyTypeItemProvider = new CustomExceptionStrategyTypeItemProvider(this);
		}

		return customExceptionStrategyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.CustomFilterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomFilterTypeItemProvider customFilterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.CustomFilterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomFilterTypeAdapter() {
		if (customFilterTypeItemProvider == null) {
			customFilterTypeItemProvider = new CustomFilterTypeItemProvider(this);
		}

		return customFilterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.CustomForwardingCatchAllStrategyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomForwardingCatchAllStrategyTypeItemProvider customForwardingCatchAllStrategyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.CustomForwardingCatchAllStrategyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomForwardingCatchAllStrategyTypeAdapter() {
		if (customForwardingCatchAllStrategyTypeItemProvider == null) {
			customForwardingCatchAllStrategyTypeItemProvider = new CustomForwardingCatchAllStrategyTypeItemProvider(this);
		}

		return customForwardingCatchAllStrategyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.CustomInboundRouterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomInboundRouterTypeItemProvider customInboundRouterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.CustomInboundRouterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomInboundRouterTypeAdapter() {
		if (customInboundRouterTypeItemProvider == null) {
			customInboundRouterTypeItemProvider = new CustomInboundRouterTypeItemProvider(this);
		}

		return customInboundRouterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.CustomOutboundRouterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomOutboundRouterTypeItemProvider customOutboundRouterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.CustomOutboundRouterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomOutboundRouterTypeAdapter() {
		if (customOutboundRouterTypeItemProvider == null) {
			customOutboundRouterTypeItemProvider = new CustomOutboundRouterTypeItemProvider(this);
		}

		return customOutboundRouterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.CustomPropertyExtractorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomPropertyExtractorTypeItemProvider customPropertyExtractorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.CustomPropertyExtractorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomPropertyExtractorTypeAdapter() {
		if (customPropertyExtractorTypeItemProvider == null) {
			customPropertyExtractorTypeItemProvider = new CustomPropertyExtractorTypeItemProvider(this);
		}

		return customPropertyExtractorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.CustomResponseRouterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomResponseRouterTypeItemProvider customResponseRouterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.CustomResponseRouterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomResponseRouterTypeAdapter() {
		if (customResponseRouterTypeItemProvider == null) {
			customResponseRouterTypeItemProvider = new CustomResponseRouterTypeItemProvider(this);
		}

		return customResponseRouterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.CustomSecurityProviderType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomSecurityProviderTypeItemProvider customSecurityProviderTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.CustomSecurityProviderType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomSecurityProviderTypeAdapter() {
		if (customSecurityProviderTypeItemProvider == null) {
			customSecurityProviderTypeItemProvider = new CustomSecurityProviderTypeItemProvider(this);
		}

		return customSecurityProviderTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.CustomTransactionFactoryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomTransactionFactoryTypeItemProvider customTransactionFactoryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.CustomTransactionFactoryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomTransactionFactoryTypeAdapter() {
		if (customTransactionFactoryTypeItemProvider == null) {
			customTransactionFactoryTypeItemProvider = new CustomTransactionFactoryTypeItemProvider(this);
		}

		return customTransactionFactoryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.CustomTransactionManagerType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomTransactionManagerTypeItemProvider customTransactionManagerTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.CustomTransactionManagerType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomTransactionManagerTypeAdapter() {
		if (customTransactionManagerTypeItemProvider == null) {
			customTransactionManagerTypeItemProvider = new CustomTransactionManagerTypeItemProvider(this);
		}

		return customTransactionManagerTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.CustomTransformerType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomTransformerTypeItemProvider customTransformerTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.CustomTransformerType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomTransformerTypeAdapter() {
		if (customTransformerTypeItemProvider == null) {
			customTransformerTypeItemProvider = new CustomTransformerTypeItemProvider(this);
		}

		return customTransformerTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.DefaultComponentType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DefaultComponentTypeItemProvider defaultComponentTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.DefaultComponentType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDefaultComponentTypeAdapter() {
		if (defaultComponentTypeItemProvider == null) {
			defaultComponentTypeItemProvider = new DefaultComponentTypeItemProvider(this);
		}

		return defaultComponentTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.DefaultModelType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DefaultModelTypeItemProvider defaultModelTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.DefaultModelType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDefaultModelTypeAdapter() {
		if (defaultModelTypeItemProvider == null) {
			defaultModelTypeItemProvider = new DefaultModelTypeItemProvider(this);
		}

		return defaultModelTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.DefaultServiceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DefaultServiceTypeItemProvider defaultServiceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.DefaultServiceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDefaultServiceTypeAdapter() {
		if (defaultServiceTypeItemProvider == null) {
			defaultServiceTypeItemProvider = new DefaultServiceTypeItemProvider(this);
		}

		return defaultServiceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.DescriptionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DescriptionTypeItemProvider descriptionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.DescriptionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDescriptionTypeAdapter() {
		if (descriptionTypeItemProvider == null) {
			descriptionTypeItemProvider = new DescriptionTypeItemProvider(this);
		}

		return descriptionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.DocumentRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentRootItemProvider documentRootItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.DocumentRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentRootAdapter() {
		if (documentRootItemProvider == null) {
			documentRootItemProvider = new DocumentRootItemProvider(this);
		}

		return documentRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.EncryptionSecurityFilterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EncryptionSecurityFilterTypeItemProvider encryptionSecurityFilterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.EncryptionSecurityFilterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEncryptionSecurityFilterTypeAdapter() {
		if (encryptionSecurityFilterTypeItemProvider == null) {
			encryptionSecurityFilterTypeItemProvider = new EncryptionSecurityFilterTypeItemProvider(this);
		}

		return encryptionSecurityFilterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.EncryptionStrategyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EncryptionStrategyTypeItemProvider encryptionStrategyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.EncryptionStrategyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEncryptionStrategyTypeAdapter() {
		if (encryptionStrategyTypeItemProvider == null) {
			encryptionStrategyTypeItemProvider = new EncryptionStrategyTypeItemProvider(this);
		}

		return encryptionStrategyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.EndpointSelectorRouterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EndpointSelectorRouterTypeItemProvider endpointSelectorRouterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.EndpointSelectorRouterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEndpointSelectorRouterTypeAdapter() {
		if (endpointSelectorRouterTypeItemProvider == null) {
			endpointSelectorRouterTypeItemProvider = new EndpointSelectorRouterTypeItemProvider(this);
		}

		return endpointSelectorRouterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.EnvironmentPropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnvironmentPropertyTypeItemProvider environmentPropertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.EnvironmentPropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnvironmentPropertyTypeAdapter() {
		if (environmentPropertyTypeItemProvider == null) {
			environmentPropertyTypeItemProvider = new EnvironmentPropertyTypeItemProvider(this);
		}

		return environmentPropertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.ExceptionStrategyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExceptionStrategyTypeItemProvider exceptionStrategyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.ExceptionStrategyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExceptionStrategyTypeAdapter() {
		if (exceptionStrategyTypeItemProvider == null) {
			exceptionStrategyTypeItemProvider = new ExceptionStrategyTypeItemProvider(this);
		}

		return exceptionStrategyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.FilteredInboundRouterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FilteredInboundRouterTypeItemProvider filteredInboundRouterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.FilteredInboundRouterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFilteredInboundRouterTypeAdapter() {
		if (filteredInboundRouterTypeItemProvider == null) {
			filteredInboundRouterTypeItemProvider = new FilteredInboundRouterTypeItemProvider(this);
		}

		return filteredInboundRouterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.FilteringOutboundRouterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FilteringOutboundRouterTypeItemProvider filteringOutboundRouterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.FilteringOutboundRouterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFilteringOutboundRouterTypeAdapter() {
		if (filteringOutboundRouterTypeItemProvider == null) {
			filteringOutboundRouterTypeItemProvider = new FilteringOutboundRouterTypeItemProvider(this);
		}

		return filteringOutboundRouterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.FilterRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FilterRefTypeItemProvider filterRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.FilterRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFilterRefTypeAdapter() {
		if (filterRefTypeItemProvider == null) {
			filterRefTypeItemProvider = new FilterRefTypeItemProvider(this);
		}

		return filterRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.ForwardingCatchAllStrategyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ForwardingCatchAllStrategyTypeItemProvider forwardingCatchAllStrategyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.ForwardingCatchAllStrategyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createForwardingCatchAllStrategyTypeAdapter() {
		if (forwardingCatchAllStrategyTypeItemProvider == null) {
			forwardingCatchAllStrategyTypeItemProvider = new ForwardingCatchAllStrategyTypeItemProvider(this);
		}

		return forwardingCatchAllStrategyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.ForwardingRouterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ForwardingRouterTypeItemProvider forwardingRouterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.ForwardingRouterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createForwardingRouterTypeAdapter() {
		if (forwardingRouterTypeItemProvider == null) {
			forwardingRouterTypeItemProvider = new ForwardingRouterTypeItemProvider(this);
		}

		return forwardingRouterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.GenericObjectFactoryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GenericObjectFactoryTypeItemProvider genericObjectFactoryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.GenericObjectFactoryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGenericObjectFactoryTypeAdapter() {
		if (genericObjectFactoryTypeItemProvider == null) {
			genericObjectFactoryTypeItemProvider = new GenericObjectFactoryTypeItemProvider(this);
		}

		return genericObjectFactoryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.GlobalEndpointType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GlobalEndpointTypeItemProvider globalEndpointTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.GlobalEndpointType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGlobalEndpointTypeAdapter() {
		if (globalEndpointTypeItemProvider == null) {
			globalEndpointTypeItemProvider = new GlobalEndpointTypeItemProvider(this);
		}

		return globalEndpointTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.IdempotentReceiverType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IdempotentReceiverTypeItemProvider idempotentReceiverTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.IdempotentReceiverType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIdempotentReceiverTypeAdapter() {
		if (idempotentReceiverTypeItemProvider == null) {
			idempotentReceiverTypeItemProvider = new IdempotentReceiverTypeItemProvider(this);
		}

		return idempotentReceiverTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.InboundEndpointType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InboundEndpointTypeItemProvider inboundEndpointTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.InboundEndpointType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInboundEndpointTypeAdapter() {
		if (inboundEndpointTypeItemProvider == null) {
			inboundEndpointTypeItemProvider = new InboundEndpointTypeItemProvider(this);
		}

		return inboundEndpointTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.InboundRouterCollectionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InboundRouterCollectionTypeItemProvider inboundRouterCollectionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.InboundRouterCollectionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInboundRouterCollectionTypeAdapter() {
		if (inboundRouterCollectionTypeItemProvider == null) {
			inboundRouterCollectionTypeItemProvider = new InboundRouterCollectionTypeItemProvider(this);
		}

		return inboundRouterCollectionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.IocContainerContextType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IocContainerContextTypeItemProvider iocContainerContextTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.IocContainerContextType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIocContainerContextTypeAdapter() {
		if (iocContainerContextTypeItemProvider == null) {
			iocContainerContextTypeItemProvider = new IocContainerContextTypeItemProvider(this);
		}

		return iocContainerContextTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.JndiConnectorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JndiConnectorTypeItemProvider jndiConnectorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.JndiConnectorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJndiConnectorTypeAdapter() {
		if (jndiConnectorTypeItemProvider == null) {
			jndiConnectorTypeItemProvider = new JndiConnectorTypeItemProvider(this);
		}

		return jndiConnectorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.JndiTransactionManagerType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JndiTransactionManagerTypeItemProvider jndiTransactionManagerTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.JndiTransactionManagerType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJndiTransactionManagerTypeAdapter() {
		if (jndiTransactionManagerTypeItemProvider == null) {
			jndiTransactionManagerTypeItemProvider = new JndiTransactionManagerTypeItemProvider(this);
		}

		return jndiTransactionManagerTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.ListOrSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ListOrSetTypeItemProvider listOrSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.ListOrSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createListOrSetTypeAdapter() {
		if (listOrSetTypeItemProvider == null) {
			listOrSetTypeItemProvider = new ListOrSetTypeItemProvider(this);
		}

		return listOrSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.LoggingCatchAllStrategyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LoggingCatchAllStrategyTypeItemProvider loggingCatchAllStrategyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.LoggingCatchAllStrategyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLoggingCatchAllStrategyTypeAdapter() {
		if (loggingCatchAllStrategyTypeItemProvider == null) {
			loggingCatchAllStrategyTypeItemProvider = new LoggingCatchAllStrategyTypeItemProvider(this);
		}

		return loggingCatchAllStrategyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.MapType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MapTypeItemProvider mapTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.MapType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMapTypeAdapter() {
		if (mapTypeItemProvider == null) {
			mapTypeItemProvider = new MapTypeItemProvider(this);
		}

		return mapTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.MessagePropertiesTransformerType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessagePropertiesTransformerTypeItemProvider messagePropertiesTransformerTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.MessagePropertiesTransformerType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessagePropertiesTransformerTypeAdapter() {
		if (messagePropertiesTransformerTypeItemProvider == null) {
			messagePropertiesTransformerTypeItemProvider = new MessagePropertiesTransformerTypeItemProvider(this);
		}

		return messagePropertiesTransformerTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.MessageSplitterOutboundRouterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageSplitterOutboundRouterTypeItemProvider messageSplitterOutboundRouterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.MessageSplitterOutboundRouterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageSplitterOutboundRouterTypeAdapter() {
		if (messageSplitterOutboundRouterTypeItemProvider == null) {
			messageSplitterOutboundRouterTypeItemProvider = new MessageSplitterOutboundRouterTypeItemProvider(this);
		}

		return messageSplitterOutboundRouterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.MuleAdminAgentType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MuleAdminAgentTypeItemProvider muleAdminAgentTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.MuleAdminAgentType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMuleAdminAgentTypeAdapter() {
		if (muleAdminAgentTypeItemProvider == null) {
			muleAdminAgentTypeItemProvider = new MuleAdminAgentTypeItemProvider(this);
		}

		return muleAdminAgentTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.MuleManagementContextType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MuleManagementContextTypeItemProvider muleManagementContextTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.MuleManagementContextType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMuleManagementContextTypeAdapter() {
		if (muleManagementContextTypeItemProvider == null) {
			muleManagementContextTypeItemProvider = new MuleManagementContextTypeItemProvider(this);
		}

		return muleManagementContextTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.MuleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MuleTypeItemProvider muleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.MuleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMuleTypeAdapter() {
		if (muleTypeItemProvider == null) {
			muleTypeItemProvider = new MuleTypeItemProvider(this);
		}

		return muleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.MuleUnsafeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MuleUnsafeTypeItemProvider muleUnsafeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.MuleUnsafeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMuleUnsafeTypeAdapter() {
		if (muleUnsafeTypeItemProvider == null) {
			muleUnsafeTypeItemProvider = new MuleUnsafeTypeItemProvider(this);
		}

		return muleUnsafeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.NestedBindingType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NestedBindingTypeItemProvider nestedBindingTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.NestedBindingType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNestedBindingTypeAdapter() {
		if (nestedBindingTypeItemProvider == null) {
			nestedBindingTypeItemProvider = new NestedBindingTypeItemProvider(this);
		}

		return nestedBindingTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.NestedRouterCollectionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NestedRouterCollectionTypeItemProvider nestedRouterCollectionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.NestedRouterCollectionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNestedRouterCollectionTypeAdapter() {
		if (nestedRouterCollectionTypeItemProvider == null) {
			nestedRouterCollectionTypeItemProvider = new NestedRouterCollectionTypeItemProvider(this);
		}

		return nestedRouterCollectionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.NoArgsCallDelegateClassType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NoArgsCallDelegateClassTypeItemProvider noArgsCallDelegateClassTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.NoArgsCallDelegateClassType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNoArgsCallDelegateClassTypeAdapter() {
		if (noArgsCallDelegateClassTypeItemProvider == null) {
			noArgsCallDelegateClassTypeItemProvider = new NoArgsCallDelegateClassTypeItemProvider(this);
		}

		return noArgsCallDelegateClassTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.NoArgsCallDelegateInstanceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NoArgsCallDelegateInstanceTypeItemProvider noArgsCallDelegateInstanceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.NoArgsCallDelegateInstanceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNoArgsCallDelegateInstanceTypeAdapter() {
		if (noArgsCallDelegateInstanceTypeItemProvider == null) {
			noArgsCallDelegateInstanceTypeItemProvider = new NoArgsCallDelegateInstanceTypeItemProvider(this);
		}

		return noArgsCallDelegateInstanceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.NoArgsCallWrapperType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NoArgsCallWrapperTypeItemProvider noArgsCallWrapperTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.NoArgsCallWrapperType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNoArgsCallWrapperTypeAdapter() {
		if (noArgsCallWrapperTypeItemProvider == null) {
			noArgsCallWrapperTypeItemProvider = new NoArgsCallWrapperTypeItemProvider(this);
		}

		return noArgsCallWrapperTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.OutboundEndpointType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutboundEndpointTypeItemProvider outboundEndpointTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.OutboundEndpointType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutboundEndpointTypeAdapter() {
		if (outboundEndpointTypeItemProvider == null) {
			outboundEndpointTypeItemProvider = new OutboundEndpointTypeItemProvider(this);
		}

		return outboundEndpointTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.OutboundRouterCollectionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutboundRouterCollectionTypeItemProvider outboundRouterCollectionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.OutboundRouterCollectionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutboundRouterCollectionTypeAdapter() {
		if (outboundRouterCollectionTypeItemProvider == null) {
			outboundRouterCollectionTypeItemProvider = new OutboundRouterCollectionTypeItemProvider(this);
		}

		return outboundRouterCollectionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.OutboundRouterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutboundRouterTypeItemProvider outboundRouterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.OutboundRouterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutboundRouterTypeAdapter() {
		if (outboundRouterTypeItemProvider == null) {
			outboundRouterTypeItemProvider = new OutboundRouterTypeItemProvider(this);
		}

		return outboundRouterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.PasswordEncryptionStrategyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PasswordEncryptionStrategyTypeItemProvider passwordEncryptionStrategyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.PasswordEncryptionStrategyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPasswordEncryptionStrategyTypeAdapter() {
		if (passwordEncryptionStrategyTypeItemProvider == null) {
			passwordEncryptionStrategyTypeItemProvider = new PasswordEncryptionStrategyTypeItemProvider(this);
		}

		return passwordEncryptionStrategyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.PatternFilterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PatternFilterTypeItemProvider patternFilterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.PatternFilterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPatternFilterTypeAdapter() {
		if (patternFilterTypeItemProvider == null) {
			patternFilterTypeItemProvider = new PatternFilterTypeItemProvider(this);
		}

		return patternFilterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.PooledObjectFactoryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PooledObjectFactoryTypeItemProvider pooledObjectFactoryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.PooledObjectFactoryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPooledObjectFactoryTypeAdapter() {
		if (pooledObjectFactoryTypeItemProvider == null) {
			pooledObjectFactoryTypeItemProvider = new PooledObjectFactoryTypeItemProvider(this);
		}

		return pooledObjectFactoryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.PoolingProfileType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PoolingProfileTypeItemProvider poolingProfileTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.PoolingProfileType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPoolingProfileTypeAdapter() {
		if (poolingProfileTypeItemProvider == null) {
			poolingProfileTypeItemProvider = new PoolingProfileTypeItemProvider(this);
		}

		return poolingProfileTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.PropertiesContainerContextType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertiesContainerContextTypeItemProvider propertiesContainerContextTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.PropertiesContainerContextType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertiesContainerContextTypeAdapter() {
		if (propertiesContainerContextTypeItemProvider == null) {
			propertiesContainerContextTypeItemProvider = new PropertiesContainerContextTypeItemProvider(this);
		}

		return propertiesContainerContextTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.PrototypeObjectFactoryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrototypeObjectFactoryTypeItemProvider prototypeObjectFactoryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.PrototypeObjectFactoryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrototypeObjectFactoryTypeAdapter() {
		if (prototypeObjectFactoryTypeItemProvider == null) {
			prototypeObjectFactoryTypeItemProvider = new PrototypeObjectFactoryTypeItemProvider(this);
		}

		return prototypeObjectFactoryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.QueueProfileType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QueueProfileTypeItemProvider queueProfileTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.QueueProfileType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQueueProfileTypeAdapter() {
		if (queueProfileTypeItemProvider == null) {
			queueProfileTypeItemProvider = new QueueProfileTypeItemProvider(this);
		}

		return queueProfileTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.ReferenceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReferenceTypeItemProvider referenceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.ReferenceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReferenceTypeAdapter() {
		if (referenceTypeItemProvider == null) {
			referenceTypeItemProvider = new ReferenceTypeItemProvider(this);
		}

		return referenceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.ReplyToType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReplyToTypeItemProvider replyToTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.ReplyToType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReplyToTypeAdapter() {
		if (replyToTypeItemProvider == null) {
			replyToTypeItemProvider = new ReplyToTypeItemProvider(this);
		}

		return replyToTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.ResponseEndpointType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResponseEndpointTypeItemProvider responseEndpointTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.ResponseEndpointType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResponseEndpointTypeAdapter() {
		if (responseEndpointTypeItemProvider == null) {
			responseEndpointTypeItemProvider = new ResponseEndpointTypeItemProvider(this);
		}

		return responseEndpointTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.ResponseRouterCollectionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResponseRouterCollectionTypeItemProvider responseRouterCollectionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.ResponseRouterCollectionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResponseRouterCollectionTypeAdapter() {
		if (responseRouterCollectionTypeItemProvider == null) {
			responseRouterCollectionTypeItemProvider = new ResponseRouterCollectionTypeItemProvider(this);
		}

		return responseRouterCollectionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.ResponseRouterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ResponseRouterTypeItemProvider responseRouterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.ResponseRouterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createResponseRouterTypeAdapter() {
		if (responseRouterTypeItemProvider == null) {
			responseRouterTypeItemProvider = new ResponseRouterTypeItemProvider(this);
		}

		return responseRouterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.RetryConnectionStrategyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RetryConnectionStrategyTypeItemProvider retryConnectionStrategyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.RetryConnectionStrategyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRetryConnectionStrategyTypeAdapter() {
		if (retryConnectionStrategyTypeItemProvider == null) {
			retryConnectionStrategyTypeItemProvider = new RetryConnectionStrategyTypeItemProvider(this);
		}

		return retryConnectionStrategyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.RmiContainerContextType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RmiContainerContextTypeItemProvider rmiContainerContextTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.RmiContainerContextType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRmiContainerContextTypeAdapter() {
		if (rmiContainerContextTypeItemProvider == null) {
			rmiContainerContextTypeItemProvider = new RmiContainerContextTypeItemProvider(this);
		}

		return rmiContainerContextTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.SecretKeyEncryptionStrategyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SecretKeyEncryptionStrategyTypeItemProvider secretKeyEncryptionStrategyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.SecretKeyEncryptionStrategyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSecretKeyEncryptionStrategyTypeAdapter() {
		if (secretKeyEncryptionStrategyTypeItemProvider == null) {
			secretKeyEncryptionStrategyTypeItemProvider = new SecretKeyEncryptionStrategyTypeItemProvider(this);
		}

		return secretKeyEncryptionStrategyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.SecurityManagerType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SecurityManagerTypeItemProvider securityManagerTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.SecurityManagerType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSecurityManagerTypeAdapter() {
		if (securityManagerTypeItemProvider == null) {
			securityManagerTypeItemProvider = new SecurityManagerTypeItemProvider(this);
		}

		return securityManagerTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.SecurityProviderType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SecurityProviderTypeItemProvider securityProviderTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.SecurityProviderType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSecurityProviderTypeAdapter() {
		if (securityProviderTypeItemProvider == null) {
			securityProviderTypeItemProvider = new SecurityProviderTypeItemProvider(this);
		}

		return securityProviderTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.SedaModelType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SedaModelTypeItemProvider sedaModelTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.SedaModelType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSedaModelTypeAdapter() {
		if (sedaModelTypeItemProvider == null) {
			sedaModelTypeItemProvider = new SedaModelTypeItemProvider(this);
		}

		return sedaModelTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.SedaServiceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SedaServiceTypeItemProvider sedaServiceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.SedaServiceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSedaServiceTypeAdapter() {
		if (sedaServiceTypeItemProvider == null) {
			sedaServiceTypeItemProvider = new SedaServiceTypeItemProvider(this);
		}

		return sedaServiceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.SelectiveConsumerRouterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SelectiveConsumerRouterTypeItemProvider selectiveConsumerRouterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.SelectiveConsumerRouterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSelectiveConsumerRouterTypeAdapter() {
		if (selectiveConsumerRouterTypeItemProvider == null) {
			selectiveConsumerRouterTypeItemProvider = new SelectiveConsumerRouterTypeItemProvider(this);
		}

		return selectiveConsumerRouterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.ServiceOverridesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceOverridesTypeItemProvider serviceOverridesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.ServiceOverridesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServiceOverridesTypeAdapter() {
		if (serviceOverridesTypeItemProvider == null) {
			serviceOverridesTypeItemProvider = new ServiceOverridesTypeItemProvider(this);
		}

		return serviceOverridesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.SingletonObjectFactoryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SingletonObjectFactoryTypeItemProvider singletonObjectFactoryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.SingletonObjectFactoryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSingletonObjectFactoryTypeAdapter() {
		if (singletonObjectFactoryTypeItemProvider == null) {
			singletonObjectFactoryTypeItemProvider = new SingletonObjectFactoryTypeItemProvider(this);
		}

		return singletonObjectFactoryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.StaticRecipientListRouterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StaticRecipientListRouterTypeItemProvider staticRecipientListRouterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.StaticRecipientListRouterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStaticRecipientListRouterTypeAdapter() {
		if (staticRecipientListRouterTypeItemProvider == null) {
			staticRecipientListRouterTypeItemProvider = new StaticRecipientListRouterTypeItemProvider(this);
		}

		return staticRecipientListRouterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.ThreadingProfileType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ThreadingProfileTypeItemProvider threadingProfileTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.ThreadingProfileType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createThreadingProfileTypeAdapter() {
		if (threadingProfileTypeItemProvider == null) {
			threadingProfileTypeItemProvider = new ThreadingProfileTypeItemProvider(this);
		}

		return threadingProfileTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.TlsClientKeyStoreType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TlsClientKeyStoreTypeItemProvider tlsClientKeyStoreTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.TlsClientKeyStoreType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTlsClientKeyStoreTypeAdapter() {
		if (tlsClientKeyStoreTypeItemProvider == null) {
			tlsClientKeyStoreTypeItemProvider = new TlsClientKeyStoreTypeItemProvider(this);
		}

		return tlsClientKeyStoreTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.TlsKeyStoreType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TlsKeyStoreTypeItemProvider tlsKeyStoreTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.TlsKeyStoreType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTlsKeyStoreTypeAdapter() {
		if (tlsKeyStoreTypeItemProvider == null) {
			tlsKeyStoreTypeItemProvider = new TlsKeyStoreTypeItemProvider(this);
		}

		return tlsKeyStoreTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.TlsProtocolHandler} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TlsProtocolHandlerItemProvider tlsProtocolHandlerItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.TlsProtocolHandler}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTlsProtocolHandlerAdapter() {
		if (tlsProtocolHandlerItemProvider == null) {
			tlsProtocolHandlerItemProvider = new TlsProtocolHandlerItemProvider(this);
		}

		return tlsProtocolHandlerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.TlsServerTrustStoreType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TlsServerTrustStoreTypeItemProvider tlsServerTrustStoreTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.TlsServerTrustStoreType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTlsServerTrustStoreTypeAdapter() {
		if (tlsServerTrustStoreTypeItemProvider == null) {
			tlsServerTrustStoreTypeItemProvider = new TlsServerTrustStoreTypeItemProvider(this);
		}

		return tlsServerTrustStoreTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.TlsTrustStoreType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TlsTrustStoreTypeItemProvider tlsTrustStoreTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.TlsTrustStoreType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTlsTrustStoreTypeAdapter() {
		if (tlsTrustStoreTypeItemProvider == null) {
			tlsTrustStoreTypeItemProvider = new TlsTrustStoreTypeItemProvider(this);
		}

		return tlsTrustStoreTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.TransactionManagerType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransactionManagerTypeItemProvider transactionManagerTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.TransactionManagerType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransactionManagerTypeAdapter() {
		if (transactionManagerTypeItemProvider == null) {
			transactionManagerTypeItemProvider = new TransactionManagerTypeItemProvider(this);
		}

		return transactionManagerTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.TransactionRefFactoryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransactionRefFactoryTypeItemProvider transactionRefFactoryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.TransactionRefFactoryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransactionRefFactoryTypeAdapter() {
		if (transactionRefFactoryTypeItemProvider == null) {
			transactionRefFactoryTypeItemProvider = new TransactionRefFactoryTypeItemProvider(this);
		}

		return transactionRefFactoryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.TransactionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransactionTypeItemProvider transactionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.TransactionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransactionTypeAdapter() {
		if (transactionTypeItemProvider == null) {
			transactionTypeItemProvider = new TransactionTypeItemProvider(this);
		}

		return transactionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.TransformerAppendStringType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransformerAppendStringTypeItemProvider transformerAppendStringTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.TransformerAppendStringType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransformerAppendStringTypeAdapter() {
		if (transformerAppendStringTypeItemProvider == null) {
			transformerAppendStringTypeItemProvider = new TransformerAppendStringTypeItemProvider(this);
		}

		return transformerAppendStringTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.TransformerRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransformerRefTypeItemProvider transformerRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.TransformerRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransformerRefTypeAdapter() {
		if (transformerRefTypeItemProvider == null) {
			transformerRefTypeItemProvider = new TransformerRefTypeItemProvider(this);
		}

		return transformerRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.TypeFilterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeFilterTypeItemProvider typeFilterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.TypeFilterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeFilterTypeAdapter() {
		if (typeFilterTypeItemProvider == null) {
			typeFilterTypeItemProvider = new TypeFilterTypeItemProvider(this);
		}

		return typeFilterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.UnitaryFilterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitaryFilterTypeItemProvider unitaryFilterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.UnitaryFilterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitaryFilterTypeAdapter() {
		if (unitaryFilterTypeItemProvider == null) {
			unitaryFilterTypeItemProvider = new UnitaryFilterTypeItemProvider(this);
		}

		return unitaryFilterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.WildcardFilterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WildcardFilterTypeItemProvider wildcardFilterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.WildcardFilterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWildcardFilterTypeAdapter() {
		if (wildcardFilterTypeItemProvider == null) {
			wildcardFilterTypeItemProvider = new WildcardFilterTypeItemProvider(this);
		}

		return wildcardFilterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.mule.ide.config.core.WireTapRouterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WireTapRouterTypeItemProvider wireTapRouterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.mule.ide.config.core.WireTapRouterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWireTapRouterTypeAdapter() {
		if (wireTapRouterTypeItemProvider == null) {
			wireTapRouterTypeItemProvider = new WireTapRouterTypeItemProvider(this);
		}

		return wireTapRouterTypeItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (abstractAgentTypeItemProvider != null) abstractAgentTypeItemProvider.dispose();
		if (abstractBindingTypeItemProvider != null) abstractBindingTypeItemProvider.dispose();
		if (abstractCatchAllStrategyTypeItemProvider != null) abstractCatchAllStrategyTypeItemProvider.dispose();
		if (abstractComponentThreadingProfileTypeItemProvider != null) abstractComponentThreadingProfileTypeItemProvider.dispose();
		if (abstractConnectionStrategyTypeItemProvider != null) abstractConnectionStrategyTypeItemProvider.dispose();
		if (abstractConnectorTypeItemProvider != null) abstractConnectorTypeItemProvider.dispose();
		if (abstractEntrypointResolverTypeItemProvider != null) abstractEntrypointResolverTypeItemProvider.dispose();
		if (abstractExceptionStrategyTypeItemProvider != null) abstractExceptionStrategyTypeItemProvider.dispose();
		if (abstractExtensionTypeItemProvider != null) abstractExtensionTypeItemProvider.dispose();
		if (abstractFilterTypeItemProvider != null) abstractFilterTypeItemProvider.dispose();
		if (abstractGlobalEndpointTypeItemProvider != null) abstractGlobalEndpointTypeItemProvider.dispose();
		if (abstractInboundEndpointTypeItemProvider != null) abstractInboundEndpointTypeItemProvider.dispose();
		if (abstractInboundRouterTypeItemProvider != null) abstractInboundRouterTypeItemProvider.dispose();
		if (abstractModelTypeItemProvider != null) abstractModelTypeItemProvider.dispose();
		if (abstractObjectFactoryTypeItemProvider != null) abstractObjectFactoryTypeItemProvider.dispose();
		if (abstractOutboundEndpointTypeItemProvider != null) abstractOutboundEndpointTypeItemProvider.dispose();
		if (abstractOutboundRouterTypeItemProvider != null) abstractOutboundRouterTypeItemProvider.dispose();
		if (abstractPoolingProfileTypeItemProvider != null) abstractPoolingProfileTypeItemProvider.dispose();
		if (abstractPropertyExtractorTypeItemProvider != null) abstractPropertyExtractorTypeItemProvider.dispose();
		if (abstractQueueProfileTypeItemProvider != null) abstractQueueProfileTypeItemProvider.dispose();
		if (abstractResponseEndpointTypeItemProvider != null) abstractResponseEndpointTypeItemProvider.dispose();
		if (abstractResponseRouterTypeItemProvider != null) abstractResponseRouterTypeItemProvider.dispose();
		if (abstractSecurityFilterTypeItemProvider != null) abstractSecurityFilterTypeItemProvider.dispose();
		if (abstractSecurityManagerTypeItemProvider != null) abstractSecurityManagerTypeItemProvider.dispose();
		if (abstractServiceTypeItemProvider != null) abstractServiceTypeItemProvider.dispose();
		if (abstractStorageTypeItemProvider != null) abstractStorageTypeItemProvider.dispose();
		if (abstractTransactionFactoryTypeItemProvider != null) abstractTransactionFactoryTypeItemProvider.dispose();
		if (abstractTransactionManagerTypeItemProvider != null) abstractTransactionManagerTypeItemProvider.dispose();
		if (abstractTransactionTypeItemProvider != null) abstractTransactionTypeItemProvider.dispose();
		if (abstractTransformerTypeItemProvider != null) abstractTransformerTypeItemProvider.dispose();
		if (baseContainerContextTypeItemProvider != null) baseContainerContextTypeItemProvider.dispose();
		if (baseServiceTypeItemProvider != null) baseServiceTypeItemProvider.dispose();
		if (callableEntrypointResolverTypeItemProvider != null) callableEntrypointResolverTypeItemProvider.dispose();
		if (chunkingRouterTypeItemProvider != null) chunkingRouterTypeItemProvider.dispose();
		if (collectionFilterTypeItemProvider != null) collectionFilterTypeItemProvider.dispose();
		if (connectionStrategyTypeItemProvider != null) connectionStrategyTypeItemProvider.dispose();
		if (connectorTypeItemProvider != null) connectorTypeItemProvider.dispose();
		if (containerContextTypeItemProvider != null) containerContextTypeItemProvider.dispose();
		if (correlationAggregatorRouterTypeItemProvider != null) correlationAggregatorRouterTypeItemProvider.dispose();
		if (correlationRouterTypeItemProvider != null) correlationRouterTypeItemProvider.dispose();
		if (customCatchAllStrategyTypeItemProvider != null) customCatchAllStrategyTypeItemProvider.dispose();
		if (customConnectionStrategyTypeItemProvider != null) customConnectionStrategyTypeItemProvider.dispose();
		if (customConnectorTypeItemProvider != null) customConnectorTypeItemProvider.dispose();
		if (customContainerContextTypeItemProvider != null) customContainerContextTypeItemProvider.dispose();
		if (customEncryptionStrategyTypeItemProvider != null) customEncryptionStrategyTypeItemProvider.dispose();
		if (customEntrypointResolverTypeItemProvider != null) customEntrypointResolverTypeItemProvider.dispose();
		if (customExceptionStrategyTypeItemProvider != null) customExceptionStrategyTypeItemProvider.dispose();
		if (customFilterTypeItemProvider != null) customFilterTypeItemProvider.dispose();
		if (customForwardingCatchAllStrategyTypeItemProvider != null) customForwardingCatchAllStrategyTypeItemProvider.dispose();
		if (customInboundRouterTypeItemProvider != null) customInboundRouterTypeItemProvider.dispose();
		if (customOutboundRouterTypeItemProvider != null) customOutboundRouterTypeItemProvider.dispose();
		if (customPropertyExtractorTypeItemProvider != null) customPropertyExtractorTypeItemProvider.dispose();
		if (customResponseRouterTypeItemProvider != null) customResponseRouterTypeItemProvider.dispose();
		if (customSecurityProviderTypeItemProvider != null) customSecurityProviderTypeItemProvider.dispose();
		if (customTransactionFactoryTypeItemProvider != null) customTransactionFactoryTypeItemProvider.dispose();
		if (customTransactionManagerTypeItemProvider != null) customTransactionManagerTypeItemProvider.dispose();
		if (customTransformerTypeItemProvider != null) customTransformerTypeItemProvider.dispose();
		if (defaultComponentTypeItemProvider != null) defaultComponentTypeItemProvider.dispose();
		if (defaultModelTypeItemProvider != null) defaultModelTypeItemProvider.dispose();
		if (defaultServiceTypeItemProvider != null) defaultServiceTypeItemProvider.dispose();
		if (descriptionTypeItemProvider != null) descriptionTypeItemProvider.dispose();
		if (documentRootItemProvider != null) documentRootItemProvider.dispose();
		if (encryptionSecurityFilterTypeItemProvider != null) encryptionSecurityFilterTypeItemProvider.dispose();
		if (encryptionStrategyTypeItemProvider != null) encryptionStrategyTypeItemProvider.dispose();
		if (endpointSelectorRouterTypeItemProvider != null) endpointSelectorRouterTypeItemProvider.dispose();
		if (environmentPropertyTypeItemProvider != null) environmentPropertyTypeItemProvider.dispose();
		if (exceptionStrategyTypeItemProvider != null) exceptionStrategyTypeItemProvider.dispose();
		if (filteredInboundRouterTypeItemProvider != null) filteredInboundRouterTypeItemProvider.dispose();
		if (filteringOutboundRouterTypeItemProvider != null) filteringOutboundRouterTypeItemProvider.dispose();
		if (filterRefTypeItemProvider != null) filterRefTypeItemProvider.dispose();
		if (forwardingCatchAllStrategyTypeItemProvider != null) forwardingCatchAllStrategyTypeItemProvider.dispose();
		if (forwardingRouterTypeItemProvider != null) forwardingRouterTypeItemProvider.dispose();
		if (genericObjectFactoryTypeItemProvider != null) genericObjectFactoryTypeItemProvider.dispose();
		if (globalEndpointTypeItemProvider != null) globalEndpointTypeItemProvider.dispose();
		if (idempotentReceiverTypeItemProvider != null) idempotentReceiverTypeItemProvider.dispose();
		if (inboundEndpointTypeItemProvider != null) inboundEndpointTypeItemProvider.dispose();
		if (inboundRouterCollectionTypeItemProvider != null) inboundRouterCollectionTypeItemProvider.dispose();
		if (iocContainerContextTypeItemProvider != null) iocContainerContextTypeItemProvider.dispose();
		if (jndiConnectorTypeItemProvider != null) jndiConnectorTypeItemProvider.dispose();
		if (jndiTransactionManagerTypeItemProvider != null) jndiTransactionManagerTypeItemProvider.dispose();
		if (listOrSetTypeItemProvider != null) listOrSetTypeItemProvider.dispose();
		if (loggingCatchAllStrategyTypeItemProvider != null) loggingCatchAllStrategyTypeItemProvider.dispose();
		if (mapTypeItemProvider != null) mapTypeItemProvider.dispose();
		if (messagePropertiesTransformerTypeItemProvider != null) messagePropertiesTransformerTypeItemProvider.dispose();
		if (messageSplitterOutboundRouterTypeItemProvider != null) messageSplitterOutboundRouterTypeItemProvider.dispose();
		if (muleAdminAgentTypeItemProvider != null) muleAdminAgentTypeItemProvider.dispose();
		if (muleManagementContextTypeItemProvider != null) muleManagementContextTypeItemProvider.dispose();
		if (muleTypeItemProvider != null) muleTypeItemProvider.dispose();
		if (muleUnsafeTypeItemProvider != null) muleUnsafeTypeItemProvider.dispose();
		if (nestedBindingTypeItemProvider != null) nestedBindingTypeItemProvider.dispose();
		if (nestedRouterCollectionTypeItemProvider != null) nestedRouterCollectionTypeItemProvider.dispose();
		if (noArgsCallDelegateClassTypeItemProvider != null) noArgsCallDelegateClassTypeItemProvider.dispose();
		if (noArgsCallDelegateInstanceTypeItemProvider != null) noArgsCallDelegateInstanceTypeItemProvider.dispose();
		if (noArgsCallWrapperTypeItemProvider != null) noArgsCallWrapperTypeItemProvider.dispose();
		if (outboundEndpointTypeItemProvider != null) outboundEndpointTypeItemProvider.dispose();
		if (outboundRouterCollectionTypeItemProvider != null) outboundRouterCollectionTypeItemProvider.dispose();
		if (outboundRouterTypeItemProvider != null) outboundRouterTypeItemProvider.dispose();
		if (passwordEncryptionStrategyTypeItemProvider != null) passwordEncryptionStrategyTypeItemProvider.dispose();
		if (patternFilterTypeItemProvider != null) patternFilterTypeItemProvider.dispose();
		if (pooledObjectFactoryTypeItemProvider != null) pooledObjectFactoryTypeItemProvider.dispose();
		if (poolingProfileTypeItemProvider != null) poolingProfileTypeItemProvider.dispose();
		if (propertiesContainerContextTypeItemProvider != null) propertiesContainerContextTypeItemProvider.dispose();
		if (prototypeObjectFactoryTypeItemProvider != null) prototypeObjectFactoryTypeItemProvider.dispose();
		if (queueProfileTypeItemProvider != null) queueProfileTypeItemProvider.dispose();
		if (referenceTypeItemProvider != null) referenceTypeItemProvider.dispose();
		if (replyToTypeItemProvider != null) replyToTypeItemProvider.dispose();
		if (responseEndpointTypeItemProvider != null) responseEndpointTypeItemProvider.dispose();
		if (responseRouterCollectionTypeItemProvider != null) responseRouterCollectionTypeItemProvider.dispose();
		if (responseRouterTypeItemProvider != null) responseRouterTypeItemProvider.dispose();
		if (retryConnectionStrategyTypeItemProvider != null) retryConnectionStrategyTypeItemProvider.dispose();
		if (rmiContainerContextTypeItemProvider != null) rmiContainerContextTypeItemProvider.dispose();
		if (secretKeyEncryptionStrategyTypeItemProvider != null) secretKeyEncryptionStrategyTypeItemProvider.dispose();
		if (securityManagerTypeItemProvider != null) securityManagerTypeItemProvider.dispose();
		if (securityProviderTypeItemProvider != null) securityProviderTypeItemProvider.dispose();
		if (sedaModelTypeItemProvider != null) sedaModelTypeItemProvider.dispose();
		if (sedaServiceTypeItemProvider != null) sedaServiceTypeItemProvider.dispose();
		if (selectiveConsumerRouterTypeItemProvider != null) selectiveConsumerRouterTypeItemProvider.dispose();
		if (serviceOverridesTypeItemProvider != null) serviceOverridesTypeItemProvider.dispose();
		if (singletonObjectFactoryTypeItemProvider != null) singletonObjectFactoryTypeItemProvider.dispose();
		if (staticRecipientListRouterTypeItemProvider != null) staticRecipientListRouterTypeItemProvider.dispose();
		if (threadingProfileTypeItemProvider != null) threadingProfileTypeItemProvider.dispose();
		if (tlsClientKeyStoreTypeItemProvider != null) tlsClientKeyStoreTypeItemProvider.dispose();
		if (tlsKeyStoreTypeItemProvider != null) tlsKeyStoreTypeItemProvider.dispose();
		if (tlsProtocolHandlerItemProvider != null) tlsProtocolHandlerItemProvider.dispose();
		if (tlsServerTrustStoreTypeItemProvider != null) tlsServerTrustStoreTypeItemProvider.dispose();
		if (tlsTrustStoreTypeItemProvider != null) tlsTrustStoreTypeItemProvider.dispose();
		if (transactionManagerTypeItemProvider != null) transactionManagerTypeItemProvider.dispose();
		if (transactionRefFactoryTypeItemProvider != null) transactionRefFactoryTypeItemProvider.dispose();
		if (transactionTypeItemProvider != null) transactionTypeItemProvider.dispose();
		if (transformerAppendStringTypeItemProvider != null) transformerAppendStringTypeItemProvider.dispose();
		if (transformerRefTypeItemProvider != null) transformerRefTypeItemProvider.dispose();
		if (typeFilterTypeItemProvider != null) typeFilterTypeItemProvider.dispose();
		if (unitaryFilterTypeItemProvider != null) unitaryFilterTypeItemProvider.dispose();
		if (wildcardFilterTypeItemProvider != null) wildcardFilterTypeItemProvider.dispose();
		if (wireTapRouterTypeItemProvider != null) wireTapRouterTypeItemProvider.dispose();
	}

}
